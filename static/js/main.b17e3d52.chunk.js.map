{"version":3,"sources":["components/Home/HomePage.js","components/NewPost/NewPostPage.js","components/Editable/Editable.js","components/ViewPost/ViewPostPage.js","components/Navigation/Navigation.js","components/FinalndInfo/FinlandInfo.js","App.js","store/actions/addPostAction.js","store/actions/actionTypes.js","store/actions/deletePostAction.js","store/actions/activePostEditAction.js","store/actions/updatePostAction.js","store/actions/fetchInfoFromApiAction.js","store/reducers/postsReducer.js","data/posts.js","store/configureStore.js","store/reducers/fetchInfoFromApiReducer.js","index.js","components/ViewPost/viewPostPage.module.css","components/Editable/editable.module.css"],"names":["HomePage","_ref","posts","RenderPosts","_ref2","post","react_default","a","createElement","reactstrap_es","key","id","Link","to","concat","style","textDecoration","className","title","category","diplayPosts","map","fluid","index_es","icon","faPlusCircle","NewPost","props","handleSave","viewClasses","post_wrapper","jumbotron_hightlight","lib","model","onSubmit","inputs","body","length","history","push","onhandleSubmit","htmlFor","editClasses","content_title","text","name","placeholder","autoFocus","required","textarea","rows","cols","type","edit_button","delete_button","Editable","editable","onActivePostEdit","handleEditSubmit","editOrUpdateBtnToggle","classes","onClick","console","log","Editable_Edit","react","content_row","content_body","join","Edit","defaultValue","ViewPost","handleDelete","active","onHandleDelete","Component","FinlandInfo","info","uuid","v4","image","images","url","imageName","externalLink","external_links","link","startTime","start_time","replace","endTime","end_time","location","location_extra_info","fi","updatedTime","last_modified_time","backgroundColor","color","fontWeight","fontSize","en","width","src","alt","short_description","offers","is_free","price","href","htmlFromAPI","App","_this","onAddPost","onDeletePost","handleActivePostEdit","edittedPost","onUpdatePost","this","onFetchInfoFromApi","_this2","Switch","Route","exact","path","component","Home_HomePage","render","NewPostPage","Object","assign","FinalndInfo_FinlandInfo","fetchedInfo","match","ViewPostPage","find","parseInt","params","postId","handleEditChange","Redirect","withRouter","connect","state","updatedPosts","newPostForm","fetchedInfoFromApi","dispatch","payload","deletePost","activePostEdit","updatePost","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","t0","stop","_x","apply","arguments","initialPostState","AllEnhancers","compose","applyMiddleware","thunk","window","devToolsExtension","allReducers","combineReducers","objectSpread","undefined","action","toConsumableArray","indexOfpost","findIndex","slice","editablePostId","indexOfEdittedPost","editablePost","createForms","store","createStore","app","es","BrowserRouter","basename","src_App_0","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b17e3d52.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Card, CardBody, CardTitle, CardSubtitle, Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./homePage.css\";\n\nconst HomePage = ({ posts }) => {\n  const RenderPosts = ({ post }) => {\n    return (\n      <Card key={post.id}>\n        <Link to={`/posts/${post.id}`} style={{ textDecoration: \"none\" }}>\n          <CardBody className=\"cardBody\">\n            <CardTitle className=\"cardText\">{post.title}</CardTitle>\n            <CardSubtitle className=\"cardText\">{post.category}</CardSubtitle>\n          </CardBody>\n        </Link>\n      </Card>\n    );\n  };\n\n  const diplayPosts = posts.map(post => {\n    return (\n      <div key={post.id} className=\"container col-12 col-md-5\">\n        <RenderPosts post={post} />\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"wrapper\">\n      <Container fluid>\n        <div className=\"col-12\">\n          <h4 className=\"introFont introTextLeft\">Hello, HyeSoo : D ,</h4>\n          <h4 className=\"introFont introTextRight\">\n            How is <span className=\"highlightText\"> ' your day in Finland '</span>?\n          </h4>\n          <Link to=\"/posts/newpost\">\n            <FontAwesomeIcon icon={faPlusCircle} className=\"addPost\" />\n          </Link>\n        </div>\n      </Container>\n      <ul className=\"postsWrapper\">{diplayPosts}</ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm } from 'react-redux-form';\nimport { Row, Jumbotron } from 'reactstrap';\nimport editClasses from '../Editable/editable.module.css';\nimport viewClasses from '../ViewPost/viewPostPage.module.css'\n\nconst NewPost = (props) => {\n  let { handleSave, posts } = props;\n  const onhandleSubmit = ({title, category, body}) => {\n     const id = posts.length +1 ;\n     const post = { id : id, title, category, body }\n      //Save the inputs\n      handleSave(post);\n      //// both history.push and goBack works to direct to 'Home'\n      props.history.push('/');\n      //props.history.goBack();\n  }\n\n\n  return (\n    <div className={viewClasses.post_wrapper}>\n    <Jumbotron className={viewClasses.jumbotron_hightlight}>\n      <LocalForm model=\"inputs\" onSubmit={(inputs) => onhandleSubmit(inputs)}>\n      <Row className=\"form-group\">\n      <label htmlFor=\"title\"><span className={editClasses.content_title}>Title :</span></label>\n          <Control.text\n            model=\"inputs.title\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"ex) My day\"\n            className=\"form-control\"\n            autoFocus={true}\n            required/>\n        </Row>\n        <Row className=\"form-group\">\n          <label htmlFor=\"category\"><span className={editClasses.content_title}>Category :</span></label>\n          <Control.text\n            model=\"inputs.category\"\n            name=\"category\"\n            id=\"category\"\n            placeholder=\"ex) work\"\n            className=\"form-control\"\n            required\n          />\n        </Row>\n        <Row className=\"form-group\">\n          <label htmlFor=\"body\"><span className={editClasses.content_title}>Write New Post:</span></label>\n          <Control.textarea\n            model=\"inputs.body\"\n            id=\"body\"\n            rows=\"10\"\n            cols=\"60\"\n            name=\"body\"\n            placeholder=\"ex) I was happy to do something\"\n            className=\"form-control\"\n            required\n          />\n        </Row>\n       <button type=\"submit\" className={editClasses.edit_button}\n        >Save</button>\n        <Link to=\"/\"><button type=\"cancel\" className={viewClasses.delete_button}>Cancel</button></Link>\n      </LocalForm>\n    </Jumbotron>\n    </div>\n  );\n};\n\nexport default NewPost;\n","import React, { Fragment } from \"react\";\nimport { LocalForm, Control } from \"react-redux-form\";\nimport { Row } from \"reactstrap\";\nimport classes from './editable.module.css';\n\nexport default ({ editable, post, onActivePostEdit, handleEditSubmit }) => {\n\n  // Edit or Update button \n  const editOrUpdateBtnToggle = editable ? (\n    <button className={classes.edit_button} onClick={() => onActivePostEdit(post)}>Update</button>\n  ) : (\n    <button className={classes.edit_button} onClick={() => onActivePostEdit(post)}>Edit</button>\n  );\n\n  console.log(editable);\n  if (editable) {\n    return <Edit post={post} handleEditSubmit={handleEditSubmit} editable={editable}onActivePostEdit={onActivePostEdit} editOrUpdateBtnToggle={editOrUpdateBtnToggle} />;\n  }\n  return (\n    <Fragment>\n      <div className={classes.content_row}> <span className={classes.content_title}>Title :</span> {post.title}</div>\n      <div className={classes.content_row}> <span className={classes.content_title}>Category :</span> {post.category}</div>\n      <div className={[classes.content_row, classes.content_body].join(' ')}>{post.body}</div>\n      {editOrUpdateBtnToggle}\n    </Fragment>\n  );\n};\n\nconst Edit = ({ post, handleEditSubmit, editOrUpdateBtnToggle}) => {\n   \n  return (\n      <LocalForm model=\"inputs\" onSubmit={(inputs) => handleEditSubmit(post, inputs)}>\n      <Row className=\"form-group\">\n        <label htmlFor=\"title\"><span className={classes.content_title}>Title :</span></label>\n        <Control.text\n          model=\"inputs.title\"\n          id=\"title\"\n          name=\"title\"\n          placeholder={post.title}\n          defaultValue={post.title}\n          className=\"form-control\"\n          autoFocus={true}\n          required\n        />\n      </Row>\n      <Row className=\"form-group\">\n        <label htmlFor=\"category\"><span className={classes.content_title}>Category :</span> </label>\n        <Control.text\n          model=\"inputs.category\"\n          name=\"category\"\n          id=\"category\"\n          placeholder={post.category}\n          defaultValue={post.category}\n          className=\"form-control\"\n          required\n        />\n      </Row>\n      <Row className=\"form-group\">\n        <label htmlFor=\"body\"><span className={classes.content_title}>Write New Post :</span></label>\n        <Control.textarea\n          model=\"inputs.body\"\n          id=\"body\"\n          rows=\"10\"\n          cols=\"60\"\n          name=\"body\"\n          placeholder={post.body}\n          defaultValue={post.body}\n          className=\"form-control\"\n          required\n        />\n      </Row>\n      {editOrUpdateBtnToggle}\n      </LocalForm>\n  );\n};\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem, Jumbotron } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Editable from \"../Editable/Editable\";\nimport classes from './viewPostPage.module.css';\n\nconst ViewPost = ({\n  post,\n  handleDelete,\n  history,\n  onActivePostEdit,\n  editable,\n  handleEditSubmit\n}) => {\n  const onHandleDelete = post => {\n    //Delete the post\n    handleDelete(post);\n    //Direct to the home page\n    history.push(\"/\");\n  };\n\n  return (\n    <div className={classes.post_wrapper}>\n      <div>\n        <Breadcrumb className=\"row\">\n          <BreadcrumbItem>\n            <Link  className=\"text-info\" to=\"/\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{post.title}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Jumbotron className={classes.jumbotron_hightlight}>\n        <Editable\n          editable={editable}\n          post={post}\n          onActivePostEdit={onActivePostEdit}\n          handleEditSubmit={handleEditSubmit}\n        />\n        {/* Delete button */}\n        <button className={classes.delete_button}onClick={() => onHandleDelete(post)}>Delete</button>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default ViewPost;\n","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navigation.css\";\n\nclass Navigation extends Component {\n  state = {\n    isNavOpen: false\n  };\n\n  toggleNav = () => {\n    this.setState({ isNavOpen: !this.state.isNavOpen });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar expand=\"md\" className=\"navBar\">\n          <NavbarBrand id=\"navBrand\" href=\"/\">\n            Finland Forum\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggleNav} />\n          <Collapse isOpen={this.state.isNavOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/\">\n                  <span className=\"navLink\"> Home </span>\n                </NavLink>\n              </NavItem>\n              <NavItem className=\"\">\n                <NavLink className=\".navLink nav-link\" to=\"/posts/newpost\">\n                  <span className=\"navLink\"> New Post </span>\n                </NavLink>\n              </NavItem>\n              <NavItem className=\"\">\n                <NavLink className=\".navLink nav-link\" to=\"/Info\">\n                  <span className=\"navLink\"> Info</span>\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Card, CardHeader, CardBody, CardText, CardLink, CardColumns } from 'reactstrap';\nimport './finlandInfo.css';\nimport uuid from 'uuid';\n\nconst FinlandInfo = ({ info }) => {\n  const htmlFromAPI = info => {\n    return info.map(info => {\n      let id = info.id ? info.id : uuid.v4();\n      let title = () => {\n        if (info.name.en) {\n          return info.name.en;\n        } else if (info.name.fi) {\n          return info.name.fi;\n        } else {\n          return 'Title';\n        }\n      };\n\n      let description = () => {\n        if (info.short_description && info.short_description.en) {\n          return info.short_description.en;\n        } else if (info.short_description && info.short_description.fi) {\n          return info.short_description.fi;\n        }\n        return 'Event description';\n      };\n\n      let image = info.images[0] ? info.images[0].url : '';\n\n      let imageName = info.images.name;\n      let externalLink = info.external_links[0] ? info.external_links[0].link : '/info';\n      let startTime = info.start_time\n        ? info.start_time.replace('T', ', ').replace(':00Z', ' ')\n        : '';\n      let endTime = info.end_time ? info.end_time.replace('T', ', ').replace(':00Z', ' ') : '';\n      let location = info.location_extra_info\n        ? info.location_extra_info.fi\n        : 'location info comes :D';\n      let regexForUpdatedTime = /[.]+[0-9]+[Z]/g;\n      let updatedTime = info.last_modified_time\n        ? info.last_modified_time.replace('T', ' ').replace(regexForUpdatedTime, ' ')\n        : 'Last updated 3 mins ago';\n      let price = () => {\n        if (info.offers[0]) {\n          if (info.offers[0].is_free === true) {\n            if (info.offers[0].is_free) {\n              return 'free';\n            } else if (info.offers[0].is_free === false) {\n              return info.offers[0].price.fi || info.offers[0].price.en;\n            }\n          }\n        }\n        return 'event price ..';\n      };\n      return (\n        <Card key={id} className=\"infoCard\">\n          <CardHeader\n            style={{\n              backgroundColor: '#f7cb15',\n              color: '#364652',\n              fontWeight: 800,\n              fontSize: '1.3rem',\n            }}\n          >\n            {title()}\n          </CardHeader>\n          <img width=\"100%\" src={image} alt={imageName} />\n          <CardBody>\n            <CardText>{description()}</CardText>\n            <CardText>\n              <span className=\"textTitle\">Date :</span> {startTime} ~ {endTime}\n            </CardText>\n            <CardText>\n              <span className=\"textTitle\">Location :</span> {location}\n            </CardText>\n            <CardText>\n              <span className=\"textTitle\">Price :</span> {price()}\n            </CardText>\n            <CardText className=\"timeToRight\">\n              <small className=\"text-muted\">Last updated time :{updatedTime}</small>\n            </CardText>\n            <CardLink href={`${externalLink}`}>More info..</CardLink>\n          </CardBody>\n        </Card>\n      );\n    });\n  };\n\n  return <CardColumns className=\"card_wrapper\">{htmlFromAPI(info)}</CardColumns>;\n};\n\nexport default FinlandInfo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport HomePage from './components/Home/HomePage';\nimport NewPostPage from './components/NewPost/NewPostPage';\nimport ViewPostPage from './components/ViewPost/ViewPostPage';\nimport Navigation from './components/Navigation/Navigation';\nimport FinlandInfo from './components/FinalndInfo/FinlandInfo';\nimport { connect } from 'react-redux';\nimport { addPost } from './store/actions/addPostAction';\nimport { deletePost } from './store/actions/deletePostAction';\nimport { activePostEdit } from './store/actions/activePostEditAction';\nimport { updatePost } from './store/actions/updatePostAction';\nimport { fetchInfoFromApi } from './store/actions/fetchInfoFromApiAction';\n\nclass App extends Component {\n  // Fetch the post data from API\n  componentDidMount() {\n    this.props.onFetchInfoFromApi();\n  }\n\n  // Handle post Data from users\n  handleSave = inputs => {\n    this.props.onAddPost(inputs);\n  };\n\n  handleDelete = post => {\n    this.props.onDeletePost(post);\n  };\n\n  handleActivePostEdit = post => {\n    this.props.onActivePostEdit(post);\n  };\n\n  handleEditSubmit = (post, inputs) => {\n    //console.log('editablePost', this.props.editablePost);\n    let edittedPost = {\n      id: post.id,\n      title: inputs.title,\n      category: inputs.category,\n      body: inputs.body,\n    };\n    console.log(edittedPost);\n    this.props.onUpdatePost(edittedPost);\n  };\n\n  componentDidUpdate() {\n    console.log({\n      posts: this.props.posts,\n      title: this.props.title,\n      category: this.props.category,\n      body: this.props.body,\n      length: this.props.posts.length,\n      editable: this.props.editable,\n    });\n  }\n\n  render() {\n    const PostWithId = ({ match, history }) => {\n      return (\n        <ViewPostPage\n          post={this.props.posts.find(post => {\n            return post.id === parseInt(match.params.postId, 10);\n          })}\n          handleDelete={this.handleDelete}\n          onActivePostEdit={this.handleActivePostEdit}\n          editable={this.props.editable}\n          handleEditSubmit={this.handleEditSubmit}\n          handleEditChange={this.handleEditChange}\n          history={history}\n        />\n      );\n    };\n\n    return (\n      <div>\n        {/* <Navigation /> */}\n        <div>Hello</div>\n        <div className=\"appWrapper\">\n          <div className=\"appMain\">\n            <Switch>\n              <Route exact path=\"/\" component={() => <HomePage posts={this.props.posts} />} />\n              <Route\n                exact\n                path=\"/posts/newpost\"\n                render={props => (\n                  <NewPostPage handleSave={this.handleSave} posts={this.props.posts} {...props} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/info\"\n                render={props => <FinlandInfo info={this.props.fetchedInfo} {...props} />}\n              />\n              <Route exact path=\"/posts/:postId\" component={PostWithId} />\n              {/* If there is no matching, redirect to home */}\n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.updatedPosts.posts,\n    title: state.newPostForm.title,\n    category: state.newPostForm.category,\n    body: state.newPostForm.body,\n    editable: state.updatedPosts.editable,\n    fetchedInfo: state.fetchedInfoFromApi,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPost: inputs => dispatch(addPost(inputs)),\n    onDeletePost: post => dispatch(deletePost(post)),\n    onActivePostEdit: post => dispatch(activePostEdit(post)),\n    onUpdatePost: post => dispatch(updatePost(post)),\n    onFetchInfoFromApi: () => dispatch(fetchInfoFromApi()),\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n","import { ADD_POST } from \"../actions/actionTypes\";\n\nexport const addPost = (post) => {\n  return {\n    type: ADD_POST,\n    payload : post\n  };\n};\n","export const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ACTIVE_POST_EDIT = 'ACTIVE_POST_EDIT';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const FETCH_INFO_FROM_API = 'FETCH_INFO_FROM_API';\n","import { DELETE_POST } from './actionTypes';\n\nexport const deletePost = (post) => {\n  return {\n    type : DELETE_POST,\n    payload : post\n  };\n};\n","import { ACTIVE_POST_EDIT} from './actionTypes';\n\nexport const activePostEdit = (post) => {\n  return {\n    type : ACTIVE_POST_EDIT,\n    payload : post\n  }\n}\n","import { UPDATE_POST } from './actionTypes';\n\nexport const updatePost = (post) => {\n  return {\n    type : UPDATE_POST,\n    payload : post,\n  };\n};","import axios from 'axios';\nimport { FETCH_INFO_FROM_API } from './actionTypes';\n\nexport const fetchInfoFromApi = () => {\n  return async(dispatch) => {\n    const url = 'https://api.hel.fi/linkedevents/v1/event/';\n    try{\n      const response = await axios.get(url);\n      dispatch({\n        type : FETCH_INFO_FROM_API,\n        payload : response.data.data\n      })\n    } catch(error){\n      console.log(error);\n    }  \n  }\n}\n","import { ADD_POST, DELETE_POST, ACTIVE_POST_EDIT, UPDATE_POST } from '../actions/actionTypes';\nimport { posts } from '../../data/posts';\n\nexport const initialPostState = { posts, editable: false };\n\nexport const postsReducer = (state = initialPostState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state, posts: [...state.posts, action.payload] };\n    // works same as above code - immutably adding the post to posts\n    // return Object.assign({}, state, {posts: [...state.posts, action.payload]})\n    case DELETE_POST:\n      //There are three ways to make delete functions\n      // 1) First, update the exisitng post array with the array which dosen't include the deleted post\n      const postId = action.payload.id;\n      //const postsAfterDelete = state.posts.filter(post => post.id !== postId);\n      //return { ...state, posts: postsAfterDelete };\n      //2) Second, concat the two arrays which exclude the deleted post, using index of deleted post and slice(copy) of them\n      //- with indexOf or findIndex\n      //const indexOfpost = state.posts.indexOf(action.payload);\n      const indexOfpost = state.posts.findIndex(post => post.id === postId);\n      return {\n        ...state,\n        posts: [\n          ...state.posts.slice(0, indexOfpost),\n          ...state.posts.slice(indexOfpost + 1, state.posts.length),\n        ],\n      };\n    case ACTIVE_POST_EDIT:\n      const editablePostId = action.payload.id;\n      // eslint-disable-next-line\n      state.posts.map(post => {\n        if (post.id === editablePostId) {\n          state.editable = true;\n        }\n      });\n      return { ...state, editable: state.editable };\n    case UPDATE_POST:\n      const indexOfEdittedPost = state.posts.findIndex(post => post.id === action.payload.id);\n      const editablePost = ([...state.posts][indexOfEdittedPost] = action.payload);\n      return {\n        ...state,\n        editable: false,\n        posts: [\n          ...state.posts.slice(0, indexOfEdittedPost),\n          editablePost,\n          ...state.posts.slice(indexOfEdittedPost + 1, state.posts.length),\n        ],\n      };\n    default:\n      return state;\n  }\n};\n","export const posts = [\n  {\n    id: 1,\n    title: \"My day in Integrify\",\n    category: \"Work\",\n    body:\n      \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n  },\n  {\n    id: 2,\n    title: \"My talk at React Meetup\",\n    category: \"Speech\",\n    body:\n      \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n  },\n  {\n    id: 3,\n    title: \"Fun at the beach\",\n    category: \"Recreation\",\n    body:\n      \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n  },\n  {\n    id: 4,\n    title: \"Running in the forest\",\n    category: \"Sport\",\n    body:\n      \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n  }\n];\n","import { createStore, combineReducers, compose, applyMiddleware } from  'redux';\nimport { postsReducer } from './reducers/postsReducer';\nimport { createForms } from 'react-redux-form';\nimport { fetchInfoFromApiReducer } from './reducers/fetchInfoFromApiReducer';\nimport thunk from 'redux-thunk';\n\n\nconst initialFormState = {\n  title: \"\",\n  category: \"\",\n  body: \"\"\n}\n\nconst AllEnhancers = compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension && window.devToolsExtension()\n)\n\nconst allReducers = combineReducers({\n  updatedPosts : postsReducer,\n  fetchedInfoFromApi : fetchInfoFromApiReducer,\n  ...createForms({\n    newPostForm : initialFormState\n  })  \n});\n\nexport const ConfigureStore = () => {\n  const store = createStore(allReducers, AllEnhancers);\n  return store;\n};\n","import { FETCH_INFO_FROM_API } from '../actions/actionTypes';\n\n\nexport const fetchInfoFromApiReducer = (state = [], action) => {\n   if(action.type === FETCH_INFO_FROM_API){\n    return action.payload;\n   }\n   return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './store/configureStore';\n\nconst store = ConfigureStore();\n\nconst app = (\n  <Provider store={store}>\n    <Router basename=\"/Finland-Forum\">\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"viewPostPage_post_wrapper__3XMDK\",\"jumbotron_hightlight\":\"viewPostPage_jumbotron_hightlight__37f9M\",\"delete_button\":\"viewPostPage_delete_button__1z7RP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_row\":\"editable_content_row__14bq3\",\"content_title\":\"editable_content_title__k5zd2\",\"edit_button\":\"editable_edit_button__3aOGZ\",\"content_body\":\"editable_content_body__1FCwc\"};"],"sourceRoot":""}